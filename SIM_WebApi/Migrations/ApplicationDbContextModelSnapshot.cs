// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIM_WebServer;

#nullable disable

namespace SIM_WebServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SIM_SharedLib.Models.Address", b =>
                {
                    b.Property<uint>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("AddressId"));

                    b.Property<string>("BuildingNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Bin", b =>
                {
                    b.Property<string>("BinId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("BinId");

                    b.ToTable("Bins");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Cart", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Company", b =>
                {
                    b.Property<uint>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("CompanyId"));

                    b.Property<uint?>("AddressId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CompanyId");

                    b.HasIndex("AddressId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Description", b =>
                {
                    b.Property<uint>("DescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("DescriptionId"));

                    b.Property<uint>("ProductId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("DescriptionId");

                    b.ToTable("Description");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Feature", b =>
                {
                    b.Property<uint>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("FeatureId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<uint>("DescriptionId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("FeatureId");

                    b.HasIndex("DescriptionId");

                    b.ToTable("Feature");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("BinId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("CostPerUnit")
                        .HasColumnType("double");

                    b.Property<uint>("DescriptionId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<uint>("ManufactererId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PricePerUnit")
                        .HasColumnType("double");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<int>("ReorderQuantity")
                        .HasColumnType("int");

                    b.Property<uint>("SupplierId")
                        .HasColumnType("int unsigned");

                    b.HasKey("ProductId");

                    b.HasIndex("BinId");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.HasIndex("ManufactererId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Specification", b =>
                {
                    b.Property<uint>("SpecificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("SpecificationId"));

                    b.Property<uint>("DescriptionId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SpecificationId");

                    b.HasIndex("DescriptionId");

                    b.ToTable("Specification");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Warehouse", b =>
                {
                    b.Property<uint>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("WarehouseId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Company", b =>
                {
                    b.HasOne("SIM_SharedLib.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Feature", b =>
                {
                    b.HasOne("SIM_SharedLib.Models.Description", null)
                        .WithMany("Features")
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Product", b =>
                {
                    b.HasOne("SIM_SharedLib.Models.Bin", "Bin")
                        .WithMany()
                        .HasForeignKey("BinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM_SharedLib.Models.Description", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM_SharedLib.Models.Company", "Manufacterer")
                        .WithMany()
                        .HasForeignKey("ManufactererId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIM_SharedLib.Models.Company", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bin");

                    b.Navigation("Description");

                    b.Navigation("Manufacterer");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Specification", b =>
                {
                    b.HasOne("SIM_SharedLib.Models.Description", null)
                        .WithMany("Specifications")
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SIM_SharedLib.Models.Description", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Specifications");
                });
#pragma warning restore 612, 618
        }
    }
}
